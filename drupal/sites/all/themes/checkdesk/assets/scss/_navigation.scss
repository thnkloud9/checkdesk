@charset "UTF-8";

// 1. Drupal Navigation at the very top.
// 2. Checkdesk #main-menu navigation

// Navigation icons are always set as before, both RTL and LTR
$icon-position: 'before';

// Icons in the navigation
@mixin nav-icons($size: $xsmall-font-size, $color: $nav-color) {
  $margin: 0 $gutter-width/2 0 0;

  @if $from-direction == right {
    $margin: 0 0 0 $gutter-width/2;
  }

  // add a post
  a[href*="add/post"] {
    @include icon("pencil", $size, $color, $icon-position, $margin);
  }
  // add a report
  li.submit-report a {
    @include icon("bookmark", $size, $color, $icon-position, $margin);
  }
  // add a story
  a[href*="add/discussion"] {
    @include icon("tag", $size, $color, $icon-position, $margin);
  }
  // home
  li.home a {
    @include icon("home", $size+4, $color, $icon-position);
  }
  // tour
  a[href*="checkdesk_take_tour"] {
    // We were using an icon but it doesn't look good...
    font-weight: bold;
  }
  // additional menu options
  li.additional a.dropdown-toggle {
    @include icon("ellipsis-h", $size, $color, $icon-position);
  }
}

// Nav item container
//
// This makes any element behave properly with 1 or more <.nav-item> children.
// It is used on both the outer parent and *some* children (where it is necessary to override).
// This helps standardize the implementation of the contained nav-items
// This is necessary because some nav-items are h2s, a, or divs.
@mixin nav-item-container() {
  @include reset-box-model;
  line-height: $nav-line-height;
  float: $from-direction;
  display: inline-block;
  clear: none;
  position: relative;
  // z-index: 1;
  background: $nav-container-bkg-color;
}

// "Nav item" — single nav unit in the navigation
//
// Could be a dropdown, header, anchor or div; and can contain an img.
@mixin nav-item { 
  @include reset-box-model;
  display: inline-block;
  float: $from-direction;  
  position: relative;
  // z-index: $zindexDropdown + 1; 
  & > a {
    // font-weight: 100;
    padding: 4px $nav-gutter;
    letter-spacing: 0.05px;
    text-decoration: none;
    line-height: $nav-height - 4px;
    color: $nav-color;
    display: inline-block;
  }

  // remove border for first items
  &:first-child {
    border-#{$from-direction}: 0 none;
  }

  // Transitions
  @include bb-transition($nav-color, $nav-active-color, '0.2s', 'color');

  // Hover style for chunky element
  &:hover {
    background-color: $nav-hover-bkg-color;
    color: $nav-hover-color;

    & > a:hover {
      color: $nav-hover-color;

      &:before {
        color: $nav-hover-color;
      }
    }
  }

  // Base style for active chunky element
  &.active,
  &.active:hover,
    &:active {
    // margin-bottom: -7px;
    background-color: $nav-active-bkg-color;
    @include border-radius($radius);

    color: $nav-active-color;
    font-weight: 700;

    // An anchor inside the chunky block
    & > a,
    & > a:hover,
      & > a:active {
      color: $nav-active-color;
      cursor: default;
      padding-bottom: 5px;

      // don't forget the icons
      &:before {
        color: $nav-active-color;
      }
    }
  }

  span.avatar img { // images in nav items
                    @include reset-box-model;
                    width: $base-font-size;
                    height: $base-font-size;
                    // border: 1px solid red;
  }

  @content;
}


// This nav contains two rows of nav-items with icons.
nav[role="navigation"] {
  // @include ctb-box-shadow(0px 1px 3px 1px rgba(0, 0, 0, 0.5));
  @include cd-sans-serif-family;
  font-size: $small-font-size;
  float: $from-direction;
  background-color: $nav-container-bkg-color;
  width: 100%;
  padding: $nav-font-size/2.1 0;

  li:last-of-type:after {
    float: $from-direction;
    clear: both;
    display: block;
  }

  // Apply nav icons
  // Warning: The line height must remain more than the icons' generated height.
  @include nav-icons(15px);

  // set the distance from the bottom of the button top of the dropdown
  .dropdown-menu, 
  #block-views-my-notifications-block .content {
    top: $nav-line-height*2;
  }

  .nav {
    margin: 0;
    padding: 0;

    @include nav-item-container; // A container for some nav items
    & > div  {
      @include nav-item-container; // reapply container reset
      h2 {
        @include nav-item; // Why is this nav item an h2? CGB
      }
    }
    & > a.btn, // the user menu button
    & > li { // default: the rest of the li's in the navigation
             @include nav-item;
    }
  }

  // mobile hambuger menu
  a#menu-toggle {
    display: block;
    @include at-breakpoint($break-medium) {
      display: none;
    }
    float: left;
    padding: 4px 11px;
    font-family: FontAwesome;
    color: white;
  }

  // mobile main-menu
  #main-menu.nav
  {
    display: none;
    @include at-breakpoint($break-medium) {
      display: block;
    }
    & > li {
      display: block;
      float: none;
      @include at-breakpoint($break-medium) {
        display: inline-block;
        float: $from-direction;  
      }
      &.dropdown {
        display: none;
        @include at-breakpoint($break-medium) {
          display: inline-block;  
        }
      }
    }
  }

  // padding for the home icon
  #main-menu {
    padding-#{$alpha}: $gutter-width;
  }

  #navigation-region,
  #user-menu {
    float: $omega; // at a larger breakpoint these fall in line
    span.avatar img {
      width: $nav-icon-height;
      height: $nav-icon-height;
      margin-#{$alpha}: $nav-gutter;
    }
    // add bell icon for notifications.
    .icon-bell { @include icon("bell"); }

    li {
      a.dropdown-toggle {
        // margin-#{opposite-position($from-direction)}: $gutter-width;
      }
    }

    li.open {
      a.dropdown-toggle {
        text-shadow: none;
      }
    }

    // hide ajax throbber in dropdown
    .ajax-progress-throbber {
      display: none;
    }
  }

  // Position dropdown menu
  #main-menu {
    .dropdown-menu {
      #{$from-direction}: 0;
      #{opposite-position($from-direction)}: auto;

      @if $from-direction == left {
        @include border-radius(0 $radius $radius $radius);
      }
      @else {
        @include border-radius($radius 0 $radius $radius);
      }
    }
  }
  #user-menu {
    margin-#{opposite-position($from-direction)}: $nav-gutter;
    .dropdown-menu {
      #{$from-direction}: auto;
      #{opposite-position($from-direction)}: 0;

      @if $from-direction == left {
        @include border-radius($radius 0 $radius $radius);
      }
      @else {
        @include border-radius(0 $radius $radius $radius);
      }
    }
  }
}

#block-locale-language {
  .language-switcher-locale-url {
    li {  
      @include nav-item;
      &.active { display: none; }
    }
  }

}

// Small breakpoint
@include at-breakpoint($break-small) {
  nav[role="navigation"] {
    // @include span-columns($break-small - 2, $break-small, $gutter-width);
    // @include pad(1, 2, $break-small);
  }
}

// Medium breakpoint
@include at-breakpoint($break-medium) {
  nav[role="navigation"] {
    // @include span-columns($break-medium - 4, $break-medium, $gutter-width);
    // @include pad(2, 3, $break-medium);
  }
}

// =======================================================================
// Drupal toolbars at the very top
//
div.region-page-top {
  #toolbar {
    position: fixed;
    z-index: $zindexFixedNavbar;
    // This can be cleaned up with toolbar css is removed.
    @include box-shadow(0 0 0 0); // disable box shadow
    padding: 0;
    margin: 0;
    overflow: hidden; // removes scroll?
    background: $nav-container-bkg-color;
    li {
      @include reset-box-model;
      a { 
        color: $nav-color; 
        padding: $gutter-width;
      } 
    }

    div.toolbar-menu {
      // height: $toolbarMenuHeight;
      // padding: 0;
      // background-color: $nav-container-bkg-color;
    }
  }
}

// make navbar fixed at the top
.navbar-fixed-top {
  position: fixed;
  right: 0;
  left: 0;
  z-index: $zindexFixedNavbar;
}

// when toolbar is present
.toolbar .navbar-fixed-top {
  top: $toolbarHeight;
}

body.toolbar-drawer {
  #main #widgets.column { top: ($toolbarHeight + $navbarHeight) !important; }
  #main {
    #content {
      margin-top: ($toolbarHeight + $navbarHeight) !important;
    }
  }
}

// Small breakpoint
@include at-breakpoint($break-small) {
  // #partner-header {
  //   @include span-columns($break-small - 2, $break-small, $gutter-width);
  //   @include pad(1, 1, $break-small);
  // }
}

// Medium breakpoint
@include at-breakpoint($break-medium) {
  // #partner-header {
  //   @include span-columns($break-medium - 4, $break-medium, $gutter-width);
  //   @include pad(2, 2, $break-medium);
  // }
}


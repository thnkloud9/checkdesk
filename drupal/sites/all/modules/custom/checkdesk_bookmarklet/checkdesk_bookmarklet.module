<?php

/**
 * Implements hook_init().
 *
 * Add a JavaScript file after form was submitted.
 */
function checkdesk_bookmarklet_init() {
  if (isset($_GET['meedan_bookmarklet_submitted'])) {
    drupal_add_js(drupal_get_path('module', 'checkdesk_bookmarklet') . '/js/checkdesk_bookmarklet_submitted.js');
  }
  // For all main checkdesk pages, when not inside of an IFRAME.
  if (!isset($_GET['meedan_bookmarklet'])) {
    drupal_add_js(drupal_get_path('module', 'checkdesk_bookmarklet') . '/js/checkdesk_bookmarklet.js');
  }
}

/**
 * Implements hook_menu().
 */
function checkdesk_bookmarklet_menu() {
  $items = array();
  $items['checkdesk/media-preview'] = array(
    'page callback' => '_checkdesk_bookmarklet_media_preview_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['checkdesk/media-widget/%'] = array(
    'page callback' => '_checkdesk_media_widget_callback',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements of hook_form_alter().
 */
function checkdesk_bookmarklet_form_alter(&$form, $form_state, $form_id) {

  // Custom report form for bookmarklet
  if ($form_id == variable_get('meedan_bookmarklet_content_type', 'page') . '_node_form') {
    global $user;
    // Check for graphic content
    $flag = ((in_array('journalist', $user->roles) || in_array('administrator', $user->roles)) ? 'graphic_journalist' : 'graphic');
    $form['graphic_content'] = array(
      '#type' => 'checkboxes',
      '#options' => array($flag => t('Graphic content')),
      '#weight' => 99,
    );

    // Show media preview just after the link field
    $path = ((isset($_GET['meedan_bookmarklet_prepopulate']) && isset($_GET['meedan_bookmarklet_prepopulate']['field_link'])) ? $_GET['meedan_bookmarklet_prepopulate']['field_link'] : FALSE);
    $preview = _checkdesk_bookmarklet_media_preview($path);
    $message = isset($preview['error']) ? $preview['error']['message'] : $preview['preview'];
    $form['report_preview'] = array(
      '#markup' => '<div id="meedan_bookmarklet_preview"><div id="meedan_bookmarklet_preview_gc" style="display: none;"><span>' . t('This report contains graphic content') . '</span>' . l(t('Click to show'), 'javascript:;', array('absolute' => TRUE, 'external' => TRUE)) . '</div><div id="meedan_bookmarklet_preview_content">' . (isset($preview['preview']) ? $preview['preview'] : '') . '</div></div>',
    );

    // Fields order
    $form['field_link']['#weight'] = -2;
    $form['report_preview']['#weight'] = 0;

    // Change field attributes
    $form['body']['und'][0]['#attributes'] = array('placeholder' => t('Add more info or write a description. What\'s the context? Does this link need to be fact-checked? What evidence do you have?'), 'rows' => 3);

    // Description textarea should not be resizable
    $form['body']['und'][0]['#resizable'] = FALSE;

    // Load JavaScript for the form
    $form['#after_build'] = array('_checkdesk_bookmarklet_load_javascript_for_bookmarklet_form');

    // Two buttons: submit and cancel
    $form['actions']['submit']['#value'] = t('Submit');
    $form['actions']['draft']['#access'] = FALSE;

    if (!empty($GLOBALS['meedan_bookmarklet_page_template'])) {
      // Just show explanation about the bookmarklet
      $form['help'] = array(
        '#markup' => '<div id="meedan_bookmarklet_help"><span>' . t('Help') . '<p>' . t('When you submit a report it becomes available for fact-checking and may be included in a blog post by our team.') . '</p></span></div>',
        '#weight' => -1,
      );

      $form['actions']['cancel'] = array(
        '#markup' => '<input type="reset" onclick="window.parent.postMessage(\'close\', \'*\'); return false;" class="form-submit" value="' . t('Cancel') . '" id="meedan_bookmarklet_cancel_button" />',
        '#weight' => 100,
      );

      // Additional processing for internal bookmarklet
      global $base_url;
      if ((isset($_GET['meedan_bookmarklet_prepopulate']) && preg_match('/^' . preg_quote($base_url, '/') . '/', $_GET['meedan_bookmarklet_prepopulate']['field_link'])) || empty($_GET['meedan_bookmarklet_prepopulate']['field_link'])) {
        foreach (array('title', 'body', 'field_link') as $field) {
          if (isset($form[$field])) $form[$field]['und'][0]['#default_value'] = '';
        }
        $form['#after_build'][] = '_checkdesk_bookmarklet_load_javascript_for_internal_bookmarklet';
      }
    }
    else {
      drupal_set_title(t('Submit report'));
      $form['field_link'][LANGUAGE_NONE][0]['#description'] = t('When you submit a report it becomes available for fact-checking and may be included in a blog post by our team.');
      if (!isset($form['nid']['#value'])) {
        //hide description and graphic content
        $form['#attached']['js'][] = array(
          'data' => 'jQuery(function() { jQuery("#edit-body, #edit-graphic-content, #edit-field-stories, #edit-field-tags").hide();});',
          'type' => 'inline',
        );
      }
      //redirect user to reports page
      //$form['actions']['submit']['#submit'][] = '_cd_report_redirect';
    }

  }
}

/**
 * Custom code to redirect user after submit new report.
 */
function _cd_report_redirect($form, &$form_state) {
  global $user;
  //redirect to user report page.
  $form_state['redirect'] = 'user/'. $user->uid;
}

/*
 * Load JavaScript file for bookmarklet form
 */
function _checkdesk_bookmarklet_load_javascript_for_bookmarklet_form($form, &$form_state) {
  //add placeholder to link field
  $form['field_link'][LANGUAGE_NONE][0]['url']['#attributes']['placeholder'] = t('Add a link');
  drupal_add_js(drupal_get_path('module', 'checkdesk_bookmarklet') . '/js/checkdesk_bookmarklet_form.js');
  // Coming from Facebook login? (Facebook removes referer, so we need to use the parameters)
  if (isset($_REQUEST['state']) && isset($_REQUEST['code'])) drupal_add_js("window.opener.location.reload(); window.close();", "inline");
  return $form;
}

/*
 * Load JavaScript file for internal bookmarklet.
 */
function _checkdesk_bookmarklet_load_javascript_for_internal_bookmarklet($form, &$form_state) {
  drupal_add_js(drupal_get_path('module', 'checkdesk_bookmarklet') . '/js/checkdesk_internal_bookmarklet.js');
  return $form;
}

/*
 * Function to show media preview.
 */
function _checkdesk_bookmarklet_media_preview($path) {
  $response = array('preview' => '');

  if (!$path) {
    return array(
      'error' => array(
        'message' => t('Preview not available.'),
      ),
    );
  }

  $oembed = meedan_oembed_data($path, array(), TRUE);
  if ($oembed) {
    if (isset($oembed->error) && $oembed->error) {
      $response['error'] = array();

      if (isset($oembed->error_message) && $oembed->error_message) {
        $response['error']['message'] = check_plain($oembed->error_message);
      }
      else {
        $response['error']['message'] = check_plain(t('There was a problem parsing this report. You can create the report now (but it will remain unpublished) and try to parse it later, or give up and try to submit it again later.'));
      }
    }
    else {
      if (isset($oembed->thumbnail_url)) {
        // If it is a tweeet, show the text instead of the image
        if (isset($oembed->provider_name) && $oembed->provider_name == 'Twitter' && $oembed->type != 'photo') {
          $response['preview'] = theme('meedan_oembed_twitter_tweet', array('tweet' => $oembed->html));
        }
        elseif (isset($oembed->provider_name) && $oembed->provider_name == 'Google Maps') {
          $response['preview'] = $oembed->html;
        }
        else {
          $response['preview'] = theme_image(array('path' => $oembed->thumbnail_url, 'alt' => t('Preview'), 'attributes' => array('class' => 'bookmarklet-preview')));
        }
      }
      elseif (isset($oembed->provider_name) && $oembed->provider_name == 'Twitter' && $oembed->type != 'photo') {
        $response['preview'] = theme('meedan_oembed_twitter_tweet', array('tweet' => $oembed->html));
      }

      if (isset($oembed->description)) {
        $response['description'] = $oembed->description;
      }

      if (isset($oembed->title)) {
        $response['title'] = $oembed->title;
      }

      // Add duplicate reports id exists
      $response['duplicates'] = FALSE;
      if (module_exists('checkdesk_duplicates')) {
        $duplicates = _checkdesk_detect_report_duplicate($path, $_GET['report_id'], $_GET['story_id']);
        $response['duplicates'] = $duplicates;
      }
    }
  }
  return $response;
}

/*
 * Menu callback for checkdesk/media-preview.
 */
function _checkdesk_bookmarklet_media_preview_callback() {
  $path = (isset($_GET['url']) ? $_GET['url'] : FALSE);
  drupal_json_output(_checkdesk_bookmarklet_media_preview($path));
}

/**
 *
 */
function _checkdesk_media_widget_callback($nid) {
  $node = node_load($nid);
  $render = field_view_field('node', $node, 'field_link',
      array(
          'type' => 'meedan_oembed_thumbnail',
          'settings' => array('imagestyle' => 'report_thumbnail'),
      )
  );
  $media_ref = checkdesk_core_droppable_reference($node);
  $response = array(
    'preview' => render($render),
    'media_ref' => $media_ref,
  );
  drupal_json_output($response);
}

/*
 * Implements hook_node_insert().
 *
 * Set flag for report from bookmarklet.
 */
function checkdesk_bookmarklet_node_insert($node) {
  if (isset($node->graphic_content) && is_array($node->graphic_content)) {
    foreach($node->graphic_content as $flag_name => $checked) {
      if ($checked) {
        $flag = flag_get_flag($flag_name);
        $flag->flag('flag', $node->nid);
      }
    }
  }

  if ($node->type == variable_get('meedan_bookmarklet_content_type', 'page')) {
    if (!empty($GLOBALS['meedan_bookmarklet_page_template'])) {
      // Hack to avoid other hooks from not being called: http://drupal.org/node/130734#comment-3835244
      $_GET['destination'] = 'meedan_bookmarklet/message?meedan_bookmarklet=1&meedan_bookmarklet_submitted=1&meedan_bookmarklet_nid=' . $node->nid . '&meedan_bookmarklet_url=' . urlencode($node->field_link[LANGUAGE_NONE][0]['url']);
    }
    /*
    else {
      global $user;
      if (in_array('journalist', $user->roles) || in_array('administrator', $user->roles)) {
        drupal_set_message(t('Now let\'s !blog.', array(
          '!blog' => l(t('blog about it'), url('node/add/post', array('absolute' => TRUE, 'query' => array('report' => $node->nid)))),
        )));
      }
    }
    */
  }
}

/**
 * Implements hook_preprocess_html().
 *
 * Change title after report was submitted.
 * Add a Close button after report was submitted.
 * Adds an id when bookmarklet is opened from inside the site.
 */
function checkdesk_bookmarklet_preprocess_html(&$variables, $hook) {
  global $base_url, $user;

  // Reload page on clicking close
  $reset_url = url('node/add/media', array('absolute' => TRUE, 'query' => array('meedan_bookmarklet' => 1)));
  $variables['meedan_bookmarklet_close'] = l('<span>[X]</span>', '', array('html' => TRUE, 'attributes' => array('id' => 'meedan_bookmarklet_close', 'onclick' => 'window.parent.postMessage(\'destroy\', \'*\'); window.location.href = \'' . $reset_url . '\'; return false;')));

  // If the user is not logged in, replace bookmarklet title to help text
  if(isset($variables['meedan_bookmarklet_title']) && !user_is_logged_in()) {
    $variables['meedan_bookmarklet_title'] = t('To ' . strtolower(variable_get('meedan_bookmarklet_title', '')) . ', you need to log in.');
  }

  if (isset($_GET['meedan_bookmarklet_submitted'])) {

    $preview = _checkdesk_bookmarklet_media_preview(urldecode($_GET['meedan_bookmarklet_url']));
    $variables['meedan_bookmarklet_title'] = isset($preview['error']) ? $preview['error']['message'] : $preview['preview'];

    $attributes = array('target' => '_blank', 'onclick' => 'if (window.parent.location.host == window.location.host) { window.parent.location.href = this.href; return false; }');

    $variables['meedan_bookmarklet_messages'] = array('<span class="meedan-bookmarklet-success">' . t('Success: Report created') . '</span>');

    if (in_array('journalist', $user->roles) || in_array('administrator', $user->roles)) {
      $variables['meedan_bookmarklet_messages'][] = t('Now let\'s !fact_check and !blog.', array(
        '!fact_check' => l(t('fact-check it'), url('user/' . $user->uid, array('absolute' => TRUE)), array('attributes' => $attributes)),
        '!blog' => l(t('blog about it'), url('node/add/post', array('absolute' => TRUE, 'query' => array('report' => $_GET['meedan_bookmarklet_nid']))), array('attributes' => $attributes)),
      ));
    }
    else {
      $variables['meedan_bookmarklet_messages'][] = l(t('View your reports.'), url('user/' . $user->uid, array('absolute' => TRUE)), array('attributes' => $attributes));
    }

    $variables['footer'] = '<input type="reset" onclick="window.parent.postMessage(\'destroy\', \'*\'); window.location.href = \'' . $reset_url . '\'" value="' . t('Close') . '" class="form-submit" id="meedan_bookmarklet_cancel_button" />';

  }

  if ((isset($_GET['meedan_bookmarklet_prepopulate']) && preg_match('/^' . preg_quote($base_url, '/') . '/', $_GET['meedan_bookmarklet_prepopulate']['field_link'])) || empty($_GET['meedan_bookmarklet_prepopulate']['field_link'])) {
    $variables['body_class'] = 'meedan-bookmarklet-internal';
  }
}

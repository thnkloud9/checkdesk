<?php
/**
 * @file checkdesk_angularjs.module
 *
 * Implements an AngularJS-driven.
 */

function checkdesk_angularjs_page_alter(&$page) {
  // Ddd some important js variables.
  drupal_add_js(array(
    'custom_modules' => '/sites/all/modules/custom',
  ), 'setting');
  $page['page_top']['requirejs'] = array(
    '#markup' => '
    <script type="text/javascript" src="sites/all/libraries/bower_components/requirejs/require.js" data-main="/sites/all/modules/custom/checkdesk_angularjs/js/bootstrap.js"></script>
    ',
      );   
}

/**
 * Implements hook_block_info().
 */
function checkdesk_angularjs_block_info() {
  $blocks['angularjs_menu'] = array(
    'info' => t('Angular Menu'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function checkdesk_angularjs_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'angularjs_menu':
      $block['subject'] = t('Angular menu');
      $items = array();

      $items[] = '<a href="/#/home">Home</a>';
      $items[] = '<a href="/#/list_users">Users</a>';
      $items[] = '<a href="/#/list_nodes">Nodes</a>';
      $items[] = '<a href="/#/list_reports">Reports</a>';

      $block['content'] = theme('item_list', array('items' => $items));
      break;
  }
  return $block;
}

/**
 * Implements hook_services_resources().
 */
function checkdesk_angularjs_services_resources() {
    $resources = array();
    $resources['media'] = array(
        'operations' => array(
            'index' => array(
                'help' => 'List all reports',
                'file' => array(
                    'type' => 'inc',
                    'module' => 'checkdesk_angularjs',
                    'name' => 'resources/media'
                ),
                'callback' => '_media_resource_index',
                'args' => array(
                    array(
                        'name' => 'page',
                        'optional' => TRUE,
                        'type' => 'int',
                        'description' => 'The zero-based index of the page to get, defaults to 0.',
                        'default value' => 0,
                        'source' => array('param' => 'page'),
                    ),
                    array(
                        'name' => 'pagesize',
                        'optional' => TRUE,
                        'type' => 'int',
                        'description' => 'Number of records to get per page.',
                        'default value' => variable_get('services_media_index_page_size', 10),
                        'source' => array('param' => 'pagesize'),
                    ),
                ),
                'access arguments' => array('access content'),
            ),
        ),
    );
    return $resources;

}
